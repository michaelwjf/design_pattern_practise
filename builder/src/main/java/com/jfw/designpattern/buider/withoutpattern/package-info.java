/**
 * @author jfw
 * @date 2021-09-28
 * <p/>
 *
 * 使用非建造者模式来实现这个需求。
 * 即，使用抽象类的方法来实现。
 *
 * <p/>
 * 这种方法的缺点是：
 * 设计的程序结构过于简单，没有设计缓存层对象，程序的扩展和维护不好。也就是说，这种设计
 * 方案，把产品（即房子）和创建产品的过程（即建房子流程）封装在一起，耦合性增强了。
 *
 * <p/>
 * 解决方案：将产品和产品建造过程解耦 ==> 使用建造者模式
 */
package com.jfw.designpattern.buider.withoutpattern;